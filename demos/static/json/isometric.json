[{"id": 1, "name": "CollectVFX.as", "content": "/**\n * www.GameCheetah.net Isometric Demo project\n * \n * The MIT License (MIT)\n * \n * Copyright (c) <2015> <Zeb Zhao>\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\npackage  \n{\n\timport gamecheetah.Entity;\n\t\n\t/**\n\t * Visual effects for collection of resource tiles.\n\t */\n\tpublic class CollectVFX extends Entity \n\t{\n\t\t/**\n\t\t * Callback for when animation finishes playing.\n\t\t */\n\t\tpublic var onComplete:Function;\n\t\t\n\t\toverride public function onActivate():void \n\t\t{\n\t\t\tthis.depth = this.location.y + 1000;\n\t\t\t// Play an animation named \"animation\"\n\t\t\tthis.clip.play(\"animation\");\n\t\t}\n\t\t\n\t\toverride public function onUpdate():void \n\t\t{\n\t\t\tif (this.clip.completed)\n\t\t\t{\n\t\t\t\t// Dispose entity once animation finished playing.\n\t\t\t\tthis.space.destroyEntity(this);\n\t\t\t\tif (onComplete) onComplete();\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n}"}, {"id": 2, "name": "Cursor.as", "content": "/**\n * www.GameCheetah.net Isometric Demo project\n * \n * The MIT License (MIT)\n * \n * Copyright (c) <2015> <Zeb Zhao>\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\npackage  \n{\n\timport gamecheetah.Entity;\n\timport gamecheetah.gameutils.Input;\n\t\n\tpublic class Cursor extends Entity \n\t{\n\t\t//{ ------------------- Behaviour Overrides -----------------------------\n\t\t\n\t\toverride public function onActivate():void \n\t\t{\n\t\t\tthis.clip.frame = 3;\n\t\t\t// Do not consume mouse click events for the Space.\n\t\t\tthis.mouseEnabled = false;\n\t\t}\n\t\t\n\t\toverride public function onUpdate():void \n\t\t{\n\t\t\tthis.location.x = this.space.camera.x + Input.mouseX - this.renderable.width / 2;\n\t\t\tthis.location.y = this.space.camera.y + Input.mouseY - this.renderable.height / 2;\n\t\t\tthis.depth = this.location.y + 1000;\n\t\t}\n\t\t\n\t\t//{ ------------------- Public Methods -----------------------------\n\t\t\n\t\tpublic function gotoNone():void \n\t\t{\n\t\t\t// Fade cursor out, and call gotoFrame() when done!\n\t\t\tthis.tweenClip(null, { \"alpha\": 0 }, 0.25, null, 0, null, gotoFrame, [3]);\n\t\t}\n\t\t\n\t\tpublic function gotoShovel():void \n\t\t{\n\t\t\tthis.tweenClip(null, { \"alpha\": 0 }, 0.25, null, 0, null, gotoFrame, [0]);\n\t\t}\n\t\t\n\t\tpublic function gotoHatchet():void \n\t\t{\n\t\t\tthis.tweenClip(null, { \"alpha\": 0 }, 0.25, null, 0, null, gotoFrame, [1]);\n\t\t}\n\t\t\n\t\tpublic function gotoPick():void \n\t\t{\n\t\t\tthis.tweenClip(null, { \"alpha\": 0 }, 0.25, null, 0, null, gotoFrame, [2]);\n\t\t}\n\t\t\n\t\t//{ ------------------- Private Methods -----------------------------\n\t\t\n\t\tprivate function gotoFrame(frame:uint):void \n\t\t{\n\t\t\tthis.clip.frame = frame;\n\t\t\t// Fade cursor in from its current alpha.\n\t\t\tthis.tweenClip(null, { \"alpha\": 1 }, 0.25);\n\t\t}\n\t}\n\n}"}, {"id": 3, "name": "Dashboard.as", "content": "/**\n * www.GameCheetah.net Isometric Demo project\n * \n * The MIT License (MIT)\n * \n * Copyright (c) <2015> <Zeb Zhao>\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\npackage  \n{\n\timport flash.geom.Point;\n\timport gamecheetah.Entity;\n\timport gamecheetah.Space;\n\timport gamecheetah.Engine;\n\t\n\tpublic class Dashboard extends Space \n\t{\n\t\tprivate static var\n\t\t\t_rockIcon:JunkIcon, _treeIcon:JunkIcon, _crystalIcon:JunkIcon;\n\t\t\t\n\t\tprivate static var\n\t\t\t_resetButton:StateButton;\n\t\t\t\n\t\t//{ ------------------- Public Methods -----------------------------\n\t\t\t\n\t\tpublic static function addResources(crystal:uint, tree:uint, rock:uint):void \n\t\t{\n\t\t\tif (crystal > 0)\t_crystalIcon.setValue(crystal + _crystalIcon.value);\n\t\t\tif (tree > 0)\t\t_treeIcon.setValue(tree + _treeIcon.value);\n\t\t\tif (rock > 0)\t\t_rockIcon.setValue(rock + _rockIcon.value);\n\t\t}\n\t\t\n\t\t/**\n\t\t * Returns true if all of the specified resources were successfully substracted.\n\t\t * Else returns false and do not subtract any of the resources.\n\t\t */\n\t\tpublic static function subtractResources(crystal:uint, tree:uint, rock:uint):Boolean \n\t\t{\n\t\t\tvar success:Boolean = crystal <= _crystalIcon.value && tree <= _treeIcon.value && rock <= _rockIcon.value;\n\t\t\t\n\t\t\tif (success)\n\t\t\t{\n\t\t\t\tif (crystal > 0)\t_crystalIcon.setValue(_crystalIcon.value - crystal);\n\t\t\t\tif (tree > 0)\t\t_treeIcon.setValue(_treeIcon.value - tree);\n\t\t\t\tif (rock > 0)\t\t_rockIcon.setValue(_rockIcon.value - rock);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (crystal > _crystalIcon.value)\t_crystalIcon.indicateRed();\n\t\t\t\tif (tree > _treeIcon.value)\t\t\t_treeIcon.indicateRed();\n\t\t\t\tif (rock > _rockIcon.value)\t\t\t_rockIcon.indicateRed();\n\t\t\t}\n\t\t\treturn success;\n\t\t}\n\t\t\n\t\t//{ ------------------- Behaviour Overrides -----------------------------\n\t\t\n\t\toverride public function onEnter():void \n\t\t{\n\t\t\tthis.mouseEnabled = true;\n\t\t\t\n\t\t\t_crystalIcon = this.createEntity(\"junkicon\", new Point(10, 10)) as JunkIcon;\n\t\t\t_crystalIcon.clip.frame = 2;\n\t\t\t\n\t\t\t_rockIcon = this.createEntity(\"junkicon\", new Point(125, 10)) as JunkIcon;\n\t\t\t_rockIcon.clip.frame = 1;\n\t\t\t\n\t\t\t_treeIcon = this.createEntity(\"junkicon\", new Point(240, 10)) as JunkIcon;\n\t\t\t_treeIcon.clip.frame = 0;\n\t\t\t\n\t\t\t_resetButton = this.createEntity(\"resetbtn\", new Point(350, 5)) as StateButton;\n\t\t\t_resetButton.setOverState(\"over\", { \"scaleX\": 1.1, \"scaleY\": 1.1 } );\n\t\t\t_resetButton.setDownState(\"over\", { \"scaleX\": 0.95, \"scaleY\": 0.95 } );\n\t\t\t_resetButton.setUpState(\"up\", { \"scaleX\": 1, \"scaleY\": 1 }, Engine.space.reset );\n\t\t}\n\t}\n\n}"}, {"id": 4, "name": "JunkIcon.as", "content": "/**\n * www.GameCheetah.net Isometric Demo project\n * \n * The MIT License (MIT)\n * \n * Copyright (c) <2015> <Zeb Zhao>\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\npackage  \n{\n\timport flash.geom.Point;\n\timport gamecheetah.Entity;\n\timport gamecheetah.gameutils.Easing;\n\t\n\tpublic class JunkIcon extends Entity \n\t{\n\t\t//{ ------------------- Public Properties -------------------\n\t\t\n\t\tpublic function get value():int\n\t\t{\n\t\t\treturn _value;\n\t\t}\n\t\t\n\t\t//{ ------------------- Private Info -----------------------------\n\t\t\n\t\tprivate var _value:int;\n\t\tprivate var _hundreds:Entity, _tens:Entity, _ones:Entity;\n\t\t\t\n\t\t//{ ------------------- Public Methods -----------------------------\n\t\t\n\t\tpublic function indicateRed():void \n\t\t{\n\t\t\t// Tween using pre-defined easing function.\n\t\t\t_hundreds.clip.tint = _tens.clip.tint = _ones.clip.tint = 0xa50000;\n\t\t\t_hundreds.tweenClip({ \"tintAlpha\": 0.5 }, { \"tintAlpha\": 0 }, 0.7, Easing.bounceEaseOut);\n\t\t\t_tens.tweenClip({ \"tintAlpha\": 0.5 }, { \"tintAlpha\": 0 }, 0.7, Easing.bounceEaseOut);\n\t\t\t_ones.tweenClip({ \"tintAlpha\": 0.5 }, { \"tintAlpha\": 0 }, 0.7, Easing.bounceEaseOut);\n\t\t}\n\t\t\n\t\tpublic function setValue(value:int):void \n\t\t{\n\t\t\t_value = value;\n\t\t\t\n\t\t\tvar str:String = \"000\" +int(Math.min(999, _value)).toString();\n\t\t\tstr = str.substr(str.length - 3, 3);\n\t\t\t\n\t\t\t// Set values and use tweening for animation.\n\t\t\t_hundreds.clip.frame = int(str.charAt(0));\n\t\t\t_hundreds.tweenClip( { \"scaleX\": 1.1, \"scaleY\": 1.1, \"alpha\": 0.25, \"rotation\": 15 },\n\t\t\t\t{ \"scaleX\": 1, \"scaleY\": 1, \"alpha\": 1, \"rotation\": 0 }, 0.5, null, 0 );\n\t\t\t\t\n\t\t\t_tens.clip.frame = int(str.charAt(1));\n\t\t\t_tens.tweenClip( { \"scaleX\": 1.1, \"scaleY\": 1.1, \"alpha\": 0.2, \"rotation\": 15 },\n\t\t\t\t{ \"scaleX\": 1, \"scaleY\": 1, \"alpha\": 1, \"rotation\": 0 }, 0.6, null, 0.1 );\n\t\t\t\t\n\t\t\t_ones.clip.frame = int(str.charAt(2));\n\t\t\t_ones.tweenClip( { \"scaleX\": 1.1, \"scaleY\": 1.1, \"alpha\": 0.1, \"rotation\": 20 },\n\t\t\t\t{ \"scaleX\": 1, \"scaleY\": 1, \"alpha\": 1, \"rotation\": 0 }, 0.7, null, 0.2 );\n\t\t}\n\t\t\n\t\t//{ ------------------- Behaviour Overrides -----------------------------\n\t\t\n\t\toverride public function onActivate():void \n\t\t{\n\t\t\t_hundreds = this.space.createEntity(\"number\", new Point(this.renderable.width + 5, 5));\n\t\t\t_tens = this.space.createEntity(\"number\", new Point(_hundreds.location.x + 20, 5));\n\t\t\t_ones = this.space.createEntity(\"number\", new Point(_tens.location.x + 20, 5));\n\t\t\t_hundreds.origin = _tens.origin = _ones.origin = this.location;\n\t\t\t// Allow bitmap smoothing for better tween effects.\n\t\t\t_hundreds.clip.smoothing = _tens.clip.smoothing = _ones.clip.smoothing = true;\n\t\t}\n\t\t\n\t}\n\n}"}, {"id": 5, "name": "Main.as", "content": "/**\n * www.GameCheetah.net Isometric Demo project\n * \n * The MIT License (MIT)\n * \n * Copyright (c) <2015> <Zeb Zhao>\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\npackage\n{\n\timport gamecheetah.Engine;\n\timport flash.display.StageScaleMode;\n\timport flash.display.StageAlign;\n\timport flash.geom.Point;\n\t\n\t\n\tpublic class Main extends Engine \n\t{\n\t\t// Embed assets to automatically load resources on building SWF.\n\t\t[Embed(source = \"../lib/resource.amf\", mimeType = \"application/octet-stream\")]\n\t\tprivate static var Assets:Class;\n\t\t\n\t\t\n\t\tpublic function Main() \n\t\t{\n\t\t\tsuper(60);  // Launch game at 60 fps\n\t\t}\n\t\t\n\t\toverride public function onEnter():void \n\t\t{\n\t\t\t// Set stage zoom and alignment behaviours\n\t\t\tif (stage) {\n\t\t\t\tstage.scaleMode = StageScaleMode.NO_SCALE;\n\t\t\t\tstage.align = StageAlign.TOP_LEFT;\n\t\t\t}\n\t\t\t\n\t\t\t// Register Entity classes with the Designer\n\t\t\tEngine.registerEntity(Tile);\n\t\t\tEngine.registerEntity(Cursor);\n\t\t\tEngine.registerEntity(CollectVFX);\n\t\t\tEngine.registerEntity(JunkIcon);\n\t\t\tEngine.registerEntity(StateButton);\n\t\t\t\n\t\t\t// Register Space classes with the Designer\n\t\t\tEngine.registerSpace(MainSpace);\n\t\t\t\n\t\t\t// Load resource file\n\t\t\tEngine.loadEmbeddedFile(Assets);\n\t\t\t\n\t\t\t// Fix screen size\n\t\t\tthis.setSize(new Point(400, 500));\n\t\t\t// Initialize other classes\n\t\t\tTile.initialize();\n\t\t}\n\t}\n\t\n}"}, {"id": 6, "name": "MainSpace.as", "content": "/**\n * www.GameCheetah.net Isometric Demo project\n * \n * The MIT License (MIT)\n * \n * Copyright (c) <2015> <Zeb Zhao>\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\npackage  \n{\n\timport flash.geom.Point;\n\timport gamecheetah.Entity;\n\timport gamecheetah.Space;\n\timport gamecheetah.Engine;\n\timport gamecheetah.gameutils.Scroller;\n\t\n\tpublic class MainSpace extends Space \n\t{\n\t\tpublic static var cursor:Cursor;\n\t\tpublic static var scroller:Scroller;\n\t\t\n\t\t//{ ------------------- Behaviour Overrides -----------------------------\n\t\t\n\t\toverride public function onEnter():void \n\t\t{\n\t\t\t// Create tile entities in this space.\n\t\t\tMapBuilder.build(this);\n\t\t\t// Enable scrolling by arrow keys\n\t\t\tscroller = new Scroller(0.1, 1, this.camera, Scroller.ARROW_KEYS);\n\t\t\tscroller.enable();\n\t\t\t// Create mouse cursor\n\t\t\tcursor = this.createEntity(\"cursor\") as Cursor;\n\t\t\t\n\t\t\t// Additional performance optimization\n\t\t\tthis.detectCollisions = false;\n\t\t\t\n\t\t\t// Set the active console to the Dashboard\n\t\t\tEngine.swapConsole(new Dashboard());\n\t\t}\n\t\t\n\t\toverride public function onExit():void \n\t\t{\n\t\t\tscroller.disable();\n\t\t}\n\t\t\n\t\t/**\n\t\t * Reset the current space to its initial state.\n\t\t * Called when Space::reset() is called.\n\t\t */\n\t\toverride public function onReset():void \n\t\t{\n\t\t\tonEnter();\n\t\t}\n\t}\n\n}"}, {"id": 7, "name": "MapBuilder.as", "content": "/**\n * www.GameCheetah.net Isometric Demo project\n * \n * The MIT License (MIT)\n * \n * Copyright (c) <2015> <Zeb Zhao>\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\npackage  \n{\n\timport flash.utils.Dictionary;\n\timport gamecheetah.Space;\n\n\tpublic class MapBuilder \n\t{\n\t\tpublic static const WIDTH: uint = 40;\n\t\tpublic static const HEIGHT: uint = 40;\n\t\tpublic static const DATA:Vector.<uint> = new <uint> [\n\t\t\t11, 11, 50, 11, 11, 11, 11, 50, 11, 50, 16, 26, 11, 11, 50, 11, 11, 11, 50, 19,\n\t\t\t20, 20, 20, 20, 20, 10, 11, 11, 11, 11, 11, 11, 25, 12, 13, 24, 23, 14, 24, 7,\n\t\t\t11, 64, 54, 46, 11, 34, 64, 54, 46, 11, 4, 11, 11, 64, 54, 46, 50, 26, 11, 31,\n\t\t\t9, 9, 9, 9, 9, 11, 64, 59, 46, 11, 64, 54, 46, 64, 54, 54, 54, 54, 46, 41, 11,\n\t\t\t53, 50, 56, 54, 54, 37, 50, 56, 54, 46, 50, 64, 37, 35, 56, 54, 46, 25, 50, 64,\n\t\t\t54, 46, 50, 64, 54, 37, 3, 56, 54, 37, 11, 56, 37, 50, 2, 3, 12, 53, 19, 11, 56,\n\t\t\t46, 29, 25, 3, 1, 11, 11, 50, 56, 59, 37, 50, 50, 50, 34, 56, 54, 54, 37, 4, 56,\n\t\t\t54, 37, 50, 50, 50, 12, 16, 50, 50, 11, 11, 50, 2, 50, 64, 37, 19, 50, 14, 53, 50,\n\t\t\t50, 50, 11, 50, 50, 50, 11, 11, 11, 50, 7, 11, 50, 11, 11, 50, 50, 50, 50, 50, 50,\n\t\t\t50, 17, 50, 50, 50, 50, 28, 50, 50, 11, 11, 11, 53, 50, 19, 50, 16, 53, 7, 11, 11,\n\t\t\t50, 17, 4, 50, 50, 11, 50, 50, 28, 29, 11, 11, 11, 50, 16, 50, 50, 18, 24, 50, 50,\n\t\t\t28, 29, 50, 50, 11, 50, 11, 29, 50, 11, 56, 46, 19, 25, 64, 37, 17, 50, 29, 26, 50,\n\t\t\t50, 50, 50, 26, 50, 50, 18, 50, 50, 4, 11, 11, 50, 18, 50, 29, 6, 14, 50, 50, 50,\n\t\t\t16, 11, 50, 28, 50, 50, 50, 50, 11, 53, 19, 50, 53, 50, 50, 7, 17, 11, 11, 50, 50,\n\t\t\t3, 50, 7, 50, 50, 28, 29, 50, 11, 11, 11, 50, 50, 50, 7, 50, 50, 50, 18, 16, 11, 11,\n\t\t\t50, 50, 17, 11, 29, 13, 53, 19, 21, 56, 54, 46, 11, 11, 11, 10, 11, 50, 50, 3, 50,\n\t\t\t50, 27, 50, 50, 50, 50, 50, 11, 11, 50, 50, 50, 50, 50, 50, 6, 50, 50, 11, 50, 11,\n\t\t\t11, 50, 50, 25, 53, 19, 10, 34, 18, 53, 50, 11, 11, 11, 50, 26, 28, 50, 26, 50, 50,\n\t\t\t29, 50, 11, 50, 28, 50, 11, 11, 50, 50, 18, 11, 50, 50, 26, 50, 50, 50, 29, 50, 50,\n\t\t\t50, 64, 37, 31, 10, 18, 29, 53, 23, 11, 28, 50, 35, 25, 50, 26, 50, 50, 14, 50, 11,\n\t\t\t11, 11, 50, 50, 50, 50, 50, 50, 11, 50, 50, 28, 50, 50, 11, 11, 50, 50, 35, 34, 53,\n\t\t\t18, 52, 10, 5, 64, 37, 5, 11, 50, 11, 50, 50, 50, 27, 50, 50, 15, 23, 50, 11, 11, 17,\n\t\t\t50, 28, 50, 11, 11, 50, 25, 27, 50, 50, 50, 11, 50, 50, 34, 26, 64, 37, 45, 27, 10,\n\t\t\t17, 47, 50, 3, 50, 11, 45, 50, 11, 28, 50, 50, 50, 50, 7, 25, 50, 11, 50, 29, 50, 16,\n\t\t\t50, 50, 7, 15, 50, 50, 50, 11, 50, 16, 50, 50, 25, 53, 5, 45, 52, 10, 64, 37, 50, 50,\n\t\t\t50, 28, 11, 11, 11, 50, 50, 50, 11, 50, 50, 50, 11, 50, 11, 50, 50, 50, 50, 3, 50,\n\t\t\t50, 50, 50, 11, 11, 11, 18, 5, 50, 50, 56, 46, 50, 52, 11, 53, 25, 50, 50, 18, 50,\n\t\t\t50, 50, 11, 11, 5, 11, 50, 50, 50, 11, 11, 18, 28, 29, 50, 11, 1, 11, 50, 11, 11, 2,\n\t\t\t50, 50, 11, 50, 3, 18, 24, 14, 53, 28, 52, 52, 56, 46, 50, 50, 50, 7, 18, 50, 50, 11,\n\t\t\t50, 11, 17, 50, 50, 11, 50, 17, 50, 11, 11, 11, 50, 50, 11, 11, 50, 50, 26, 12, 50,\n\t\t\t11, 50, 17, 50, 64, 37, 50, 52, 21, 29, 53, 28, 28, 50, 29, 50, 18, 28, 12, 50, 11,\n\t\t\t50, 50, 11, 50, 50, 50, 50, 50, 11, 50, 50, 11, 50, 26, 50, 27, 26, 50, 11, 11, 11,\n\t\t\t50, 18, 53, 28, 50, 11, 10, 64, 37, 50, 50, 50, 50, 50, 29, 16, 50, 50, 50, 11, 29,\n\t\t\t50, 16, 25, 2, 50, 50, 50, 50, 28, 50, 11, 50, 50, 13, 15, 28, 50, 11, 50, 11, 50,\n\t\t\t53, 50, 17, 11, 10, 53, 12, 29, 50, 17, 25, 50, 23, 50, 29, 27, 50, 11, 50, 50, 50,\n\t\t\t50, 50, 24, 18, 29, 50, 16, 50, 14, 50, 11, 11, 6, 15, 29, 28, 50, 11, 11, 56, 54,\n\t\t\t46, 11, 10, 56, 46, 14, 7, 22, 33, 28, 5, 50, 23, 17, 4, 50, 11, 11, 11, 50, 50,\n\t\t\t50, 50, 50, 6, 50, 50, 50, 11, 11, 45, 11, 50, 11, 50, 7, 50, 50, 50, 50, 47, 11, 11,\n\t\t\t11, 56, 54, 46, 43, 65, 23, 50, 12, 25, 50, 50, 11, 5, 11, 25, 11, 11, 50, 11, 50, 50,\n\t\t\t50, 11, 11, 11, 50, 29, 50, 11, 11, 50, 50, 50, 18, 50, 25, 53, 52, 11, 11, 11, 11,\n\t\t\t53, 15, 23, 50, 50, 50, 50, 50, 11, 11, 50, 50, 11, 50, 50, 11, 11, 11, 11, 27, 50,\n\t\t\t11, 4, 11, 50, 11, 11, 50, 50, 29, 50, 50, 5, 64, 37, 12, 11, 28, 11, 64, 37, 50, 50,\n\t\t\t17, 50, 50, 50, 28, 50, 11, 50, 25, 17, 50, 27, 50, 11, 11, 50, 50, 50, 25, 12, 50,\n\t\t\t16, 11, 50, 17, 50, 50, 50, 25, 50, 53, 2, 25, 11, 11, 11, 53, 23, 6, 50, 50, 18, 16,\n\t\t\t50, 50, 11, 50, 3, 50, 50, 28, 50, 50, 50, 50, 11, 11, 11, 11, 11, 50, 50, 50, 17, 50,\n\t\t\t50, 50, 35, 50, 11, 56, 46, 3, 18, 11, 11, 53, 3, 50, 50, 29, 18, 50, 28, 50, 50, 11,\n\t\t\t50, 11, 50, 50, 50, 16, 50, 17, 50, 50, 50, 50, 11, 28, 50, 50, 50, 50, 50, 50, 50, 5,\n\t\t\t11, 11, 53, 52, 11, 11, 64, 37, 50, 11, 50, 50, 50, 18, 50, 50, 11, 11, 50, 11, 11, 50,\n\t\t\t50, 11, 50, 28, 29, 17, 17, 50, 17, 7, 17, 50, 50, 50, 50, 11, 50, 11, 50, 64, 37, 11,\n\t\t\t11, 5, 53, 11, 11, 50, 50, 12, 50, 50, 11, 11, 11, 50, 50, 5, 50, 29, 11, 50, 11, 50,\n\t\t\t50, 50, 50, 28, 50, 50, 50, 16, 50, 7, 15, 50, 50, 50, 64, 37, 25, 7, 11, 64, 37, 11,\n\t\t\t50, 50, 11, 11, 50, 50, 11, 11, 50, 50, 50, 7, 6, 50, 50, 50, 11, 11, 50, 16, 5, 6, 50,\n\t\t\t25, 50, 50, 50, 17, 50, 50, 11, 11, 53, 5, 28, 52, 50, 53, 50, 11, 50, 11, 50, 11, 11,\n\t\t\t11, 50, 50, 50, 50, 28, 50, 25, 50, 29, 3, 50, 50, 50, 50, 7, 50, 50, 50, 24, 50, 50,\n\t\t\t50, 28, 11, 50, 50, 56, 46, 7, 52, 50, 53, 28, 50, 50, 50, 11, 17, 50, 50, 11, 29, 50,\n\t\t\t28, 50, 50, 50, 23, 50, 18, 50, 11, 11, 11, 50, 7, 50, 15, 50, 28, 29, 11, 11, 50, 1,\n\t\t\t18, 2, 53, 11, 52, 50, 56, 46, 17, 50, 11, 11, 50, 50, 17, 50, 50, 29, 50, 28, 50, 17,\n\t\t\t29, 4, 50, 45, 50, 50, 7, 7, 50, 29, 50, 29, 50, 50, 50, 11, 50, 3, 1, 50, 56, 46, 11,\n\t\t\t50, 13, 53, 16, 11, 50, 11, 50, 11, 50, 11, 50, 50, 50, 50, 50, 18, 50, 50, 17, 50, 7,\n\t\t\t50, 11, 11, 11, 11, 11, 50, 50, 11, 50, 11, 50, 50, 50, 11, 50, 53, 52, 35, 50, 53, 16,\n\t\t\t50, 50, 11, 11, 50, 11, 3, 11, 50, 11, 50, 11, 50, 50, 18, 50, 50, 50, 50, 50, 50, 50,\n\t\t\t11, 50, 50, 11, 3, 1, 11, 11, 11, 50, 11, 64, 37, 52, 50, 23, 53, 50, 17, 12, 50, 11,\n\t\t\t26, 11, 11, 11, 11, 50, 11, 50, 50, 11, 50, 50, 50, 28, 50, 7, 16, 27, 50, 50, 11, 11,\n\t\t\t50, 11, 11, 50, 50, 11, 50, 53, 11, 11, 28, 64, 37, 29, 28, 50, 28, 50, 50, 50, 23, 11,\n\t\t\t50, 28, 50, 11, 11, 11, 50, 18, 50, 50, 29, 50, 50, 50, 50, 17, 50, 29, 11, 50, 16, 50,\n\t\t\t11, 50, 50, 56, 46, 11, 25, 47, 12, 2, 64, 54, 46, 50, 23, 64, 54, 46, 50, 25, 50, 11,\n\t\t\t11, 3, 1, 7, 50, 23, 7, 50, 50, 15, 50, 50, 18, 50, 50, 50, 50, 50, 5, 50, 50, 3, 53, 4,\n\t\t\t18, 53, 64, 54, 37, 16, 53, 5, 50, 53, 50, 53, 24, 50, 64, 54, 54, 46, 5, 64, 46, 28, 50,\n\t\t\t50, 1, 64, 59, 46, 13, 25, 50, 23, 64, 54, 46, 50, 16, 64, 37, 24, 16, 56, 37, 15, 50, 28,\n\t\t\t56, 54, 54, 37, 24, 56, 54, 54, 37, 34, 29, 56, 54, 37, 56, 54, 46, 24, 64, 37, 50, 53, 27,\n\t\t\t64, 54, 54, 37, 12, 53, 27, 50, 53, 18, 11, 27, 35, 52, 28, 18, 25, 29, 28, 50, 13, 50, 41,\n\t\t\t51, 51, 51, 51, 51, 51, 51, 51, 21, 15, 56, 54, 37, 11, 50, 56, 54, 37, 26, 15, 50, 16, 56,\n\t\t\t54, 54, 37, 35, 11, 29, 52, 25, 52, 52, 18, 52, 52, 52, 52, 52, 19, 20, 20, 20, 20, 20, 20,\n\t\t\t20, 20, 10, 52, 25, 11, 52, 11, 52, 11, 52, 11, 52, 52, 52, 52, 52, 52, 11, 11, 11, 52];\n\t\t\t\n\t\tpublic static var tileLookup:Dictionary = new Dictionary();\n\t\t\n\t\t/**\n\t\t * Builds the map by creating TileEntities in the provided space object.\n\t\t * @param\tspace\tThe space object to build the map in.\n\t\t */\n\t\tpublic static function build(space:Space):void \n\t\t{\n\t\t\tvar tile:Tile, tileX:int, tileY:int;\n\t\t\t// Create all tiles.\n\t\t\tfor (var i:int = 0; i < DATA.length; i++)\n\t\t\t{\n\t\t\t\ttileX = i % WIDTH;\n\t\t\t\ttileY = i / WIDTH;\n\t\t\t\ttile = space.createEntity(\"landscape\") as Tile;  // The graphic tag will always be lowercase!\n\t\t\t\ttile.tileID = DATA[i];\n\t\t\t\ttile.setCoordinates(tileX, tileY);\n\t\t\t\ttileLookup[tileX + \",\" + tileY] = tile;\n\t\t\t}\n\t\t\t\n\t\t\t// Link the tiles spatially after every tile's been created.\n\t\t\tfor (i = 0; i < DATA.length; i++)\n\t\t\t{\n\t\t\t\ttileX = i % WIDTH;\n\t\t\t\ttileY = i / WIDTH;\n\t\t\t\ttile = tileLookup[tileX + \",\" + tileY];\n\t\t\t\ttile.left = tileLookup[(tileX-1) + \",\" + tileY];\n\t\t\t\ttile.right = tileLookup[(tileX+1) + \",\" + tileY];\n\t\t\t\ttile.top = tileLookup[tileX + \",\" + (tileY-1)];\n\t\t\t\ttile.bottom = tileLookup[tileX + \",\" + (tileY+1)];\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n}"}, {"id": 8, "name": "StateButton.as", "content": "/**\n * www.GameCheetah.net Isometric Demo project\n * \n * The MIT License (MIT)\n * \n * Copyright (c) <2015> <Zeb Zhao>\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\npackage \n{\n\timport gamecheetah.Entity;\n\t\n\tpublic class StateButton extends Entity \n\t{\n\t\t//{ ------------------- Private Info -------------------\n\t\t\n\t\tprivate var\n\t\t\t_downTweenTo:Object, _upTweenTo:Object, _overTweenTo:Object,\n\t\t\t_mouseDown:Function, _mouseUp:Function, _mouseOver:Function,\n\t\t\t_downAnimation:String, _upAnimation:String, _overAnimation:String;\n\t\t\n\t\t//{ ------------------- Public Methods -------------------\n\t\t\n\t\tpublic function setDownState(animation:String, tweenTo:Object=null, handler:Function=null):void \n\t\t{\n\t\t\t_downAnimation = animation;\n\t\t\t_downTweenTo = tweenTo;\n\t\t\t_mouseDown = handler;\n\t\t}\n\t\t\n\t\tpublic function setUpState(animation:String, tweenTo:Object=null, handler:Function=null):void \n\t\t{\n\t\t\t_upAnimation = animation;\n\t\t\t_upTweenTo = tweenTo;\n\t\t\t_mouseUp = handler;\n\t\t}\n\t\t\n\t\tpublic function setOverState(animation:String, tweenTo:Object=null, handler:Function=null):void \n\t\t{\n\t\t\t_overAnimation = animation;\n\t\t\t_overTweenTo = tweenTo;\n\t\t\t_mouseOver = handler;\n\t\t}\n\t\t\n\t\t//{ ------------------- Behaviour Overrides -------------------\n\t\t\n\t\toverride public function onActivate():void \n\t\t{\n\t\t\tthis.mouseEnabled = true;\n\t\t\tthis.clip.smoothing = true;\n\t\t}\n\t\t\n\t\toverride public function onMouseDown():void \n\t\t{\n\t\t\tif (_downAnimation)\t\tthis.clip.play(_downAnimation);\n\t\t\tif (_downTweenTo) \t\tthis.tweenClip(null, _downTweenTo);\n\t\t\tif (_mouseDown) \t\t_mouseDown();\n\t\t}\n\t\t\n\t\toverride public function onMouseUp():void \n\t\t{\n\t\t\tif (_upAnimation)\t\tthis.clip.play(_upAnimation);\n\t\t\tif (_upTweenTo) \t\tthis.tweenClip(null, _upTweenTo);\n\t\t\tif (_mouseUp) \t\t\t_mouseUp();\n\t\t}\n\t\t\n\t\toverride public function onMouseOver():void \n\t\t{\n\t\t\tif (_overAnimation)\t\tthis.clip.play(_overAnimation);\n\t\t\tif (_overTweenTo) \t\tthis.tweenClip(null, _overTweenTo);\n\t\t\tif (_mouseOver) \t\t_mouseOver();\n\t\t}\n\t\t\n\t\toverride public function onMouseOut():void \n\t\t{\n\t\t\tif (_upAnimation)\t\tthis.clip.play(_upAnimation);\n\t\t\tif (_upTweenTo) \t\tthis.tweenClip(null, _upTweenTo);\n\t\t}\n\t}\n}"}, {"id": 9, "name": "Tile.as", "content": "/**\n * www.GameCheetah.net Isometric Demo project\n * \n * The MIT License (MIT)\n * \n * Copyright (c) <2015> <Zeb Zhao>\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\npackage  \n{\n\timport flash.geom.Point;\n\timport flash.utils.Dictionary;\n\timport gamecheetah.Entity;\n\t\n\tpublic class Tile extends Entity \n\t{\n\t\t// Dimensions\n\t\tpublic static const HALF_WIDTH:int = 65;\n\t\tpublic static const HALF_HEIGHT:int = 33;\n\t\t\n\t\t// IDs of road tiles\n\t\tpublic static const ROADS:Array = [\n\t\t\t22, 32, 33, 36, 39, 40, 42, 43, 44, 48, 49, 57, 58, 63, 65];\n\t\t\t\n\t\t// IDs of bridge tiles\n\t\tpublic static const BRIDGES:Array = [47, 59];\n\t\t\n\t\t// Information lookup\n\t\tpublic static const TYPES:Dictionary = new Dictionary();\n\t\t\n\t\tpublic static function initialize():void\n\t\t{\n\t\t\tTYPES[1] = new Resource(\"crystal\", 2);\n\t\t\tTYPES[2] = new Resource(\"crystal\", 2);\n\t\t\tTYPES[3] = new Resource(\"crystal\", 2);\n\t\t\tTYPES[12] = new Resource(\"crystal\", 2);\n\t\t\tTYPES[4] = new Resource(\"rock\", 2);\n\t\t\tTYPES[5] = new Resource(\"rock\", 2);\n\t\t\tTYPES[13] = new Resource(\"rock\", 2);\n\t\t\tTYPES[14] = new Resource(\"rock\", 2);\n\t\t\tTYPES[15] = new Resource(\"rock\", 2);\n\t\t\tTYPES[23] = new Resource(\"rock\", 4);\n\t\t\tTYPES[24] = new Resource(\"rock\", 4);\n\t\t\tTYPES[25] = new Resource(\"rock\", 4);\n\t\t\tTYPES[6] = new Resource(\"tree\", 4);\n\t\t\tTYPES[7] = new Resource(\"tree\", 4);\n\t\t\tTYPES[16] = new Resource(\"tree\", 6);\n\t\t\tTYPES[17] = new Resource(\"tree\", 6);\n\t\t\tTYPES[18] = new Resource(\"tree\", 4);\n\t\t\tTYPES[26] = new Resource(\"tree\", 4);\n\t\t\tTYPES[27] = new Resource(\"tree\", 4);\n\t\t\tTYPES[28] = new Resource(\"tree\", 6);\n\t\t\tTYPES[29] = new Resource(\"tree\", 4);\n\t\t\tTYPES[34] = new Resource(\"tree\", 6);\n\t\t\tTYPES[35] = new Resource(\"tree\", 4);\n\t\t\tTYPES[45] = new Resource(\"tree\", 4);\n\t\t\tTYPES[9] = new Obstacle(true, { \"tree\": 12, \"rock\": 5 } );\n\t\t\tTYPES[10] = new Obstacle(true, { \"tree\": 12, \"rock\": 5 } );\n\t\t\tTYPES[11] = new Obstacle(true, { \"tree\": 12, \"rock\": 5 } );\n\t\t\tTYPES[19] = new Obstacle(true, { \"tree\": 12, \"rock\": 5 } );\n\t\t\tTYPES[20] = new Obstacle(true, { \"tree\": 12, \"rock\": 5 } );\n\t\t\tTYPES[21] = new Obstacle(true, { \"tree\": 12, \"rock\": 5 } );\n\t\t\tTYPES[31] = new Obstacle(true, { \"tree\": 12, \"rock\": 5 } );\n\t\t\tTYPES[41] = new Obstacle(true, { \"tree\": 12, \"rock\": 5 } );\n\t\t\tTYPES[51] = new Obstacle(true, { \"tree\": 12, \"rock\": 5 } );\n\t\t}\n\t\t\n\t\t//{ ------------------- Public Properties -------------------\n\t\t\n\t\t/**\n\t\t * True if one of the adjacent tiles is a road or a connected bridge.\n\t\t */\n\t\tpublic function get isBesideRoad():Boolean \n\t\t{\n\t\t\treturn (left && left.isRoad || right && right.isRoad || top && top.isRoad || bottom && bottom.isRoad ||\n\t\t\t\t\tleft && left.isBridgeConnected || right && right.isBridgeConnected ||\n\t\t\t\t\ttop && top.isBridgeConnected || bottom && bottom.isBridgeConnected);\n\t\t}\n\t\t\n\t\tpublic function get isRoad():Boolean \n\t\t{\n\t\t\treturn ROADS.indexOf(this.tileID) >= 0;\n\t\t}\n\t\t\t\n\t\tpublic function get isBridge():Boolean \n\t\t{\n\t\t\treturn BRIDGES.indexOf(this.tileID) >= 0;\n\t\t}\n\t\t\n\t\t/**\n\t\t * A bridge is connected if it's beside a road.\n\t\t */\n\t\tpublic function get isBridgeConnected():Boolean \n\t\t{\n\t\t\treturn this.isBridge && (left.isRoad || right.isRoad || top.isRoad || bottom.isRoad);\n\t\t}\n\t\t\n\t\t/**\n\t\t * True if this is an empty tile, no road, no resource, no anything.\n\t\t */\n\t\tpublic function get isClear():Boolean \n\t\t{\n\t\t\treturn this.tileID == 52 || this.tileID == 50;\n\t\t}\n\t\t\n\t\t/**\n\t\t * The tile ID used to identify the tile type.\n\t\t */\n\t\tpublic function get tileID():uint \n\t\t{\n\t\t\treturn this.clip.frame + 1;\n\t\t}\n\t\tpublic function set tileID(value:uint):void \n\t\t{\n\t\t\tthis.clip.frame = value - 1;\n\t\t}\n\t\t\n\t\t//{ ------------------- Public Info -----------------------------\n\t\t\n\t\t// Info used to build roads\n\t\tpublic var left:Tile;\n\t\tpublic var right:Tile;\n\t\tpublic var top:Tile;\n\t\tpublic var bottom:Tile;\n\t\t\n\t\t//{ ------------------- Private Info -----------------------------\n\t\t\n\t\tprivate var _isGlowing:Boolean;\n\t\tprivate var _framesElapsed:int;\n\t\t\n\t\t//{ ------------------- Behaviour Overrides -----------------------------\n\t\t\n\t\toverride public function onActivate():void \n\t\t{\n\t\t\t// Must be true to use onMouseOver, onMouseDown, onMouseUp, onMouseMove callbacks.\n\t\t\tthis.mouseEnabled = true;\n\t\t\t// Set tint color for glow effect\n\t\t\tthis.clip.tint = 0xffffff;\n\t\t}\n\t\t\n\t\toverride public function onUpdate():void \n\t\t{\n\t\t\t// Renderable/clip refer to the same object.\n\t\t\t// Update the tint alpha periodically to give a glowing effect.\n\t\t\tthis.renderable.tintAlpha = _isGlowing ? calculateGlowAlpha() : 0;\n\t\t\t_framesElapsed++;\n\t\t}\n\t\t\n\t\toverride public function onMouseOver():void \n\t\t{\n\t\t\tif (isBesideRoad)\n\t\t\t{\n\t\t\t\t// Trigger glow effect\n\t\t\t\tstartGlowEffect();\n\t\t\t\t\n\t\t\t\t// Lookup tile info object from its 'tileID'\n\t\t\t\tvar tileInfo:* = TYPES[this.tileID];\n\t\t\t\t\n\t\t\t\tif (tileInfo is Resource)\n\t\t\t\t{\n\t\t\t\t\tvar resourceType:String = (tileInfo as Resource).resourceType;\n\t\t\t\t\t\n\t\t\t\t\tif (resourceType == \"crystal\")\t\tMainSpace.cursor.gotoPick();\n\t\t\t\t\telse if (resourceType == \"rock\")\tMainSpace.cursor.gotoPick();\n\t\t\t\t\telse if (resourceType == \"tree\")\tMainSpace.cursor.gotoHatchet();\n\t\t\t\t}\n\t\t\t\telse if (tileInfo is Obstacle)\t\t\tMainSpace.cursor.gotoShovel();\n\t\t\t\telse if (this.isClear)\t\t\t\t\tMainSpace.cursor.gotoShovel();\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tMainSpace.cursor.gotoNone();\n\t\t\t\t\tstopGlowEffect();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tMainSpace.cursor.gotoNone();\n\t\t\t\tstopGlowEffect();\n\t\t\t}\n\t\t}\n\t\t\n\t\toverride public function onMouseOut():void \n\t\t{\n\t\t\tstopGlowEffect();\n\t\t}\n\t\t\n\t\toverride public function onMouseUp():void \n\t\t{\n\t\t\t// Must be connected to a road or a connected bridge to do anything!\n\t\t\tif (isBesideRoad)\n\t\t\t{\n\t\t\t\tvar tileInfo:* = TYPES[this.tileID];\n\t\t\t\t\n\t\t\t\tif (tileInfo is Resource)\n\t\t\t\t{\n\t\t\t\t\t// Harvest the resource.\n\t\t\t\t\tDashboard.addResources(\n\t\t\t\t\t\ttileInfo.resourceType == \"crystal\" ? tileInfo.resourceCount : 0,\n\t\t\t\t\t\ttileInfo.resourceType == \"tree\" ? tileInfo.resourceCount : 0,\n\t\t\t\t\t\ttileInfo.resourceType == \"rock\" ? tileInfo.resourceCount : 0);\n\t\t\t\t\t\t\n\t\t\t\t\tclearTile(tileInfo.resourceType);\n\t\t\t\t}\n\t\t\t\telse if (tileInfo is Obstacle)\n\t\t\t\t{\n\t\t\t\t\t// Check if obstacle can be cleared\n\t\t\t\t\tif (tileInfo.clearable)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Check resource requirements\n\t\t\t\t\t\tif (Dashboard.subtractResources(0,\n\t\t\t\t\t\t\t\ttileInfo.clearRequirements[\"tree\"], tileInfo.clearRequirements[\"rock\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tclearTile(\"obstacle\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.isClear)\n\t\t\t\t{\n\t\t\t\t\t// Check resource requirements\n\t\t\t\t\tif (Dashboard.subtractResources(0, 2, 1))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.space.createEntity(\"shovel\");\t// Show shovel animation\n\t\t\t\t\t\tbuildRoad(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t//{ ------------------- Public Methods -----------------------------\n\t\t\n\t\tpublic function buildRoad(propagateBuild:Boolean=false):void \n\t\t{\n\t\t\tvar leftConnect:Boolean = left && (left.isBridge || left.isRoad);\n\t\t\tvar rightConnect:Boolean = right && (right.isBridge || right.isRoad);\n\t\t\tvar topConnect:Boolean = top && (top.isBridge || top.isRoad);\n\t\t\tvar bottomConnect:Boolean = bottom && (bottom.isBridge || bottom.isRoad);\n\t\t\t\n\t\t\tif (topConnect && bottomConnect && leftConnect && rightConnect) this.tileID = 32;\n\t\t\telse if (topConnect && bottomConnect && leftConnect) this.tileID = 40;\n\t\t\telse if (topConnect && bottomConnect && rightConnect) this.tileID = 58;\n\t\t\telse if (topConnect && leftConnect && rightConnect) this.tileID = 39;\n\t\t\telse if (bottomConnect && leftConnect && rightConnect) this.tileID = 49;\n\t\t\telse if (bottomConnect && leftConnect) this.tileID = 57;\n\t\t\telse if (bottomConnect && rightConnect) this.tileID = 44;\n\t\t\telse if (topConnect && rightConnect) this.tileID = 36;\n\t\t\telse if (topConnect && leftConnect) this.tileID = 48;\n\t\t\telse if (rightConnect && leftConnect) this.tileID = 63;\n\t\t\telse if (topConnect && bottomConnect) this.tileID = 42;\n\t\t\telse this.tileID = 32;\n\t\t\t\n\t\t\tif (propagateBuild)\n\t\t\t{\n\t\t\t\tif (left && left.isRoad) left.buildRoad();\n\t\t\t\tif (right && right.isRoad) right.buildRoad();\n\t\t\t\tif (top && top.isRoad) top.buildRoad();\n\t\t\t\tif (bottom && bottom.isRoad) bottom.buildRoad();\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic function clearTile(resourceType:String):void \n\t\t{\n\t\t\tvar vfx:CollectVFX;\n\t\t\tvar dest:Point = this.location.clone();\n\t\t\t\n\t\t\t// Play appropriate animation\n\t\t\tif (resourceType == \"obstacle\")\t\tvfx = this.space.createEntity(\"shovel\", dest) as CollectVFX;\n\t\t\telse if (resourceType == \"rock\")\tvfx = this.space.createEntity(\"pick\", dest) as CollectVFX;\n\t\t\telse if (resourceType == \"crystal\")\tvfx = this.space.createEntity(\"pick\", dest) as CollectVFX;\n\t\t\telse if (resourceType == \"tree\")\tvfx = this.space.createEntity(\"hatchet\", dest) as CollectVFX;\n\t\t\t\n\t\t\t// Disable tile from being clicked again!\n\t\t\tthis.mouseEnabled = false;\n\t\t\t// Clear tile when animation completed.\n\t\t\tvfx.onComplete = gotoCleared;\n\t\t}\n\t\t\n\t\tpublic function setCoordinates(tileX:int, tileY:int):void \n\t\t{\n\t\t\tthis.location.x = (tileX - tileY) * HALF_WIDTH;\n\t\t\tthis.location.y = (tileX + tileY) * HALF_HEIGHT;\n\t\t\tthis.depth = this.location.y;\n\t\t}\n\t\t\n\t\t//{ ------------------- Private Methods -----------------------------\n\t\t\n\t\tprivate function startGlowEffect():void \n\t\t{\n\t\t\t_isGlowing = true;\n\t\t\t_framesElapsed = 0;\n\t\t}\n\t\t\n\t\tprivate function stopGlowEffect():void \n\t\t{\n\t\t\t_isGlowing = false;\n\t\t}\n\t\t\n\t\tprivate function calculateGlowAlpha():Number \n\t\t{\n\t\t\treturn 0.1 * Math.sin(_framesElapsed / 45 * Math.PI) + 0.1;\n\t\t}\n\t\t\n\t\tprivate function gotoCleared():void \n\t\t{\n\t\t\tthis.mouseEnabled = true;\n\t\t\tthis.tileID = 50;\n\t\t}\n\t}\n}\n\nclass Resource\n{\n\tpublic var resourceCount:uint;\n\tpublic var resourceType:String;\n\t\n\tpublic function Resource(resourceType:String, resourceCount:uint=1) \n\t{\n\t\tthis.resourceCount = resourceCount;\n\t\tthis.resourceType = resourceType;\n\t}\n}\n\nclass Obstacle\n{\n\tpublic var clearable:Boolean;\n\tpublic var clearRequirements:Object;\n\t\n\tpublic function Obstacle(clearable:Boolean=false, clearRequirements:Object=null):void \n\t{\n\t\tthis.clearable = clearable;\n\t\tthis.clearRequirements = clearRequirements;\n\t}\n}\n"}]
